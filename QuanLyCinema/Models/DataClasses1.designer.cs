#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyCinema.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLCinema")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertchitietdoan(chitietdoan instance);
    partial void Updatechitietdoan(chitietdoan instance);
    partial void Deletechitietdoan(chitietdoan instance);
    partial void Insertchitiethoadon(chitiethoadon instance);
    partial void Updatechitiethoadon(chitiethoadon instance);
    partial void Deletechitiethoadon(chitiethoadon instance);
    partial void Insertdoan(doan instance);
    partial void Updatedoan(doan instance);
    partial void Deletedoan(doan instance);
    partial void Insertghe(ghe instance);
    partial void Updateghe(ghe instance);
    partial void Deleteghe(ghe instance);
    partial void Inserthoadon(hoadon instance);
    partial void Updatehoadon(hoadon instance);
    partial void Deletehoadon(hoadon instance);
    partial void Insertnguoidung(nguoidung instance);
    partial void Updatenguoidung(nguoidung instance);
    partial void Deletenguoidung(nguoidung instance);
    partial void Insertphim(phim instance);
    partial void Updatephim(phim instance);
    partial void Deletephim(phim instance);
    partial void Inserttheloai(theloai instance);
    partial void Updatetheloai(theloai instance);
    partial void Deletetheloai(theloai instance);
    #endregion
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<chitietdoan> chitietdoans
		{
			get
			{
				return this.GetTable<chitietdoan>();
			}
		}
		
		public System.Data.Linq.Table<chitiethoadon> chitiethoadons
		{
			get
			{
				return this.GetTable<chitiethoadon>();
			}
		}
		
		public System.Data.Linq.Table<doan> doans
		{
			get
			{
				return this.GetTable<doan>();
			}
		}
		
		public System.Data.Linq.Table<ghe> ghes
		{
			get
			{
				return this.GetTable<ghe>();
			}
		}
		
		public System.Data.Linq.Table<hoadon> hoadons
		{
			get
			{
				return this.GetTable<hoadon>();
			}
		}
		
		public System.Data.Linq.Table<nguoidung> nguoidungs
		{
			get
			{
				return this.GetTable<nguoidung>();
			}
		}
		
		public System.Data.Linq.Table<phim> phims
		{
			get
			{
				return this.GetTable<phim>();
			}
		}
		
		public System.Data.Linq.Table<theloai> theloais
		{
			get
			{
				return this.GetTable<theloai>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chitietdoan")]
	public partial class chitietdoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _hoadonid;
		
		private int _doandid;
		
		private int _soluong;
		
		private decimal _gia;
		
		private EntityRef<doan> _doan;
		
		private EntityRef<hoadon> _hoadon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnhoadonidChanging(int value);
    partial void OnhoadonidChanged();
    partial void OndoandidChanging(int value);
    partial void OndoandidChanged();
    partial void OnsoluongChanging(int value);
    partial void OnsoluongChanged();
    partial void OngiaChanging(decimal value);
    partial void OngiaChanged();
    #endregion
		
		public chitietdoan()
		{
			this._doan = default(EntityRef<doan>);
			this._hoadon = default(EntityRef<hoadon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoadonid", DbType="Int NOT NULL")]
		public int hoadonid
		{
			get
			{
				return this._hoadonid;
			}
			set
			{
				if ((this._hoadonid != value))
				{
					if (this._hoadon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhoadonidChanging(value);
					this.SendPropertyChanging();
					this._hoadonid = value;
					this.SendPropertyChanged("hoadonid");
					this.OnhoadonidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doandid", DbType="Int NOT NULL")]
		public int doandid
		{
			get
			{
				return this._doandid;
			}
			set
			{
				if ((this._doandid != value))
				{
					if (this._doan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndoandidChanging(value);
					this.SendPropertyChanging();
					this._doandid = value;
					this.SendPropertyChanged("doandid");
					this.OndoandidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluong", DbType="Int NOT NULL")]
		public int soluong
		{
			get
			{
				return this._soluong;
			}
			set
			{
				if ((this._soluong != value))
				{
					this.OnsoluongChanging(value);
					this.SendPropertyChanging();
					this._soluong = value;
					this.SendPropertyChanged("soluong");
					this.OnsoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gia", DbType="Decimal(10,2) NOT NULL")]
		public decimal gia
		{
			get
			{
				return this._gia;
			}
			set
			{
				if ((this._gia != value))
				{
					this.OngiaChanging(value);
					this.SendPropertyChanging();
					this._gia = value;
					this.SendPropertyChanged("gia");
					this.OngiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doan_chitietdoan", Storage="_doan", ThisKey="doandid", OtherKey="id", IsForeignKey=true)]
		public doan doan
		{
			get
			{
				return this._doan.Entity;
			}
			set
			{
				doan previousValue = this._doan.Entity;
				if (((previousValue != value) 
							|| (this._doan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._doan.Entity = null;
						previousValue.chitietdoans.Remove(this);
					}
					this._doan.Entity = value;
					if ((value != null))
					{
						value.chitietdoans.Add(this);
						this._doandid = value.id;
					}
					else
					{
						this._doandid = default(int);
					}
					this.SendPropertyChanged("doan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hoadon_chitietdoan", Storage="_hoadon", ThisKey="hoadonid", OtherKey="id", IsForeignKey=true)]
		public hoadon hoadon
		{
			get
			{
				return this._hoadon.Entity;
			}
			set
			{
				hoadon previousValue = this._hoadon.Entity;
				if (((previousValue != value) 
							|| (this._hoadon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hoadon.Entity = null;
						previousValue.chitietdoans.Remove(this);
					}
					this._hoadon.Entity = value;
					if ((value != null))
					{
						value.chitietdoans.Add(this);
						this._hoadonid = value.id;
					}
					else
					{
						this._hoadonid = default(int);
					}
					this.SendPropertyChanged("hoadon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chitiethoadon")]
	public partial class chitiethoadon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _hoadonid;
		
		private int _gheid;
		
		private decimal _gia;
		
		private EntityRef<ghe> _ghe;
		
		private EntityRef<hoadon> _hoadon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnhoadonidChanging(int value);
    partial void OnhoadonidChanged();
    partial void OngheidChanging(int value);
    partial void OngheidChanged();
    partial void OngiaChanging(decimal value);
    partial void OngiaChanged();
    #endregion
		
		public chitiethoadon()
		{
			this._ghe = default(EntityRef<ghe>);
			this._hoadon = default(EntityRef<hoadon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoadonid", DbType="Int NOT NULL")]
		public int hoadonid
		{
			get
			{
				return this._hoadonid;
			}
			set
			{
				if ((this._hoadonid != value))
				{
					if (this._hoadon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhoadonidChanging(value);
					this.SendPropertyChanging();
					this._hoadonid = value;
					this.SendPropertyChanged("hoadonid");
					this.OnhoadonidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gheid", DbType="Int NOT NULL")]
		public int gheid
		{
			get
			{
				return this._gheid;
			}
			set
			{
				if ((this._gheid != value))
				{
					if (this._ghe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngheidChanging(value);
					this.SendPropertyChanging();
					this._gheid = value;
					this.SendPropertyChanged("gheid");
					this.OngheidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gia", DbType="Decimal(10,2) NOT NULL")]
		public decimal gia
		{
			get
			{
				return this._gia;
			}
			set
			{
				if ((this._gia != value))
				{
					this.OngiaChanging(value);
					this.SendPropertyChanging();
					this._gia = value;
					this.SendPropertyChanged("gia");
					this.OngiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ghe_chitiethoadon", Storage="_ghe", ThisKey="gheid", OtherKey="id", IsForeignKey=true)]
		public ghe ghe
		{
			get
			{
				return this._ghe.Entity;
			}
			set
			{
				ghe previousValue = this._ghe.Entity;
				if (((previousValue != value) 
							|| (this._ghe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ghe.Entity = null;
						previousValue.chitiethoadons.Remove(this);
					}
					this._ghe.Entity = value;
					if ((value != null))
					{
						value.chitiethoadons.Add(this);
						this._gheid = value.id;
					}
					else
					{
						this._gheid = default(int);
					}
					this.SendPropertyChanged("ghe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hoadon_chitiethoadon", Storage="_hoadon", ThisKey="hoadonid", OtherKey="id", IsForeignKey=true)]
		public hoadon hoadon
		{
			get
			{
				return this._hoadon.Entity;
			}
			set
			{
				hoadon previousValue = this._hoadon.Entity;
				if (((previousValue != value) 
							|| (this._hoadon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hoadon.Entity = null;
						previousValue.chitiethoadons.Remove(this);
					}
					this._hoadon.Entity = value;
					if ((value != null))
					{
						value.chitiethoadons.Add(this);
						this._hoadonid = value.id;
					}
					else
					{
						this._hoadonid = default(int);
					}
					this.SendPropertyChanged("hoadon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.doan")]
	public partial class doan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ten;
		
		private decimal _gia;
		
		private string _hinhanh;
		
		private EntitySet<chitietdoan> _chitietdoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenChanging(string value);
    partial void OntenChanged();
    partial void OngiaChanging(decimal value);
    partial void OngiaChanged();
    partial void OnhinhanhChanging(string value);
    partial void OnhinhanhChanged();
    #endregion
		
		public doan()
		{
			this._chitietdoans = new EntitySet<chitietdoan>(new Action<chitietdoan>(this.attach_chitietdoans), new Action<chitietdoan>(this.detach_chitietdoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ten", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ten
		{
			get
			{
				return this._ten;
			}
			set
			{
				if ((this._ten != value))
				{
					this.OntenChanging(value);
					this.SendPropertyChanging();
					this._ten = value;
					this.SendPropertyChanged("ten");
					this.OntenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gia", DbType="Decimal(10,2) NOT NULL")]
		public decimal gia
		{
			get
			{
				return this._gia;
			}
			set
			{
				if ((this._gia != value))
				{
					this.OngiaChanging(value);
					this.SendPropertyChanging();
					this._gia = value;
					this.SendPropertyChanged("gia");
					this.OngiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hinhanh", DbType="NVarChar(555)")]
		public string hinhanh
		{
			get
			{
				return this._hinhanh;
			}
			set
			{
				if ((this._hinhanh != value))
				{
					this.OnhinhanhChanging(value);
					this.SendPropertyChanging();
					this._hinhanh = value;
					this.SendPropertyChanged("hinhanh");
					this.OnhinhanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doan_chitietdoan", Storage="_chitietdoans", ThisKey="id", OtherKey="doandid")]
		public EntitySet<chitietdoan> chitietdoans
		{
			get
			{
				return this._chitietdoans;
			}
			set
			{
				this._chitietdoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_chitietdoans(chitietdoan entity)
		{
			this.SendPropertyChanging();
			entity.doan = this;
		}
		
		private void detach_chitietdoans(chitietdoan entity)
		{
			this.SendPropertyChanging();
			entity.doan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ghe")]
	public partial class ghe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _phimid;
		
		private string _vitri;
		
		private System.Nullable<int> _trangthai;
		
		private System.Nullable<int> _hoadonid;
		
		private System.Nullable<System.DateTime> _thoigianGiu;
		
		private EntitySet<chitiethoadon> _chitiethoadons;
		
		private EntityRef<hoadon> _hoadon;
		
		private EntityRef<phim> _phim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnphimidChanging(int value);
    partial void OnphimidChanged();
    partial void OnvitriChanging(string value);
    partial void OnvitriChanged();
    partial void OntrangthaiChanging(System.Nullable<int> value);
    partial void OntrangthaiChanged();
    partial void OnhoadonidChanging(System.Nullable<int> value);
    partial void OnhoadonidChanged();
    partial void OnthoigianGiuChanging(System.Nullable<System.DateTime> value);
    partial void OnthoigianGiuChanged();
    #endregion
		
		public ghe()
		{
			this._chitiethoadons = new EntitySet<chitiethoadon>(new Action<chitiethoadon>(this.attach_chitiethoadons), new Action<chitiethoadon>(this.detach_chitiethoadons));
			this._hoadon = default(EntityRef<hoadon>);
			this._phim = default(EntityRef<phim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phimid", DbType="Int NOT NULL")]
		public int phimid
		{
			get
			{
				return this._phimid;
			}
			set
			{
				if ((this._phimid != value))
				{
					if (this._phim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnphimidChanging(value);
					this.SendPropertyChanging();
					this._phimid = value;
					this.SendPropertyChanged("phimid");
					this.OnphimidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vitri", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string vitri
		{
			get
			{
				return this._vitri;
			}
			set
			{
				if ((this._vitri != value))
				{
					this.OnvitriChanging(value);
					this.SendPropertyChanging();
					this._vitri = value;
					this.SendPropertyChanged("vitri");
					this.OnvitriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangthai", DbType="Int")]
		public System.Nullable<int> trangthai
		{
			get
			{
				return this._trangthai;
			}
			set
			{
				if ((this._trangthai != value))
				{
					this.OntrangthaiChanging(value);
					this.SendPropertyChanging();
					this._trangthai = value;
					this.SendPropertyChanged("trangthai");
					this.OntrangthaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoadonid", DbType="Int")]
		public System.Nullable<int> hoadonid
		{
			get
			{
				return this._hoadonid;
			}
			set
			{
				if ((this._hoadonid != value))
				{
					if (this._hoadon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhoadonidChanging(value);
					this.SendPropertyChanging();
					this._hoadonid = value;
					this.SendPropertyChanged("hoadonid");
					this.OnhoadonidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thoigianGiu", DbType="DateTime")]
		public System.Nullable<System.DateTime> thoigianGiu
		{
			get
			{
				return this._thoigianGiu;
			}
			set
			{
				if ((this._thoigianGiu != value))
				{
					this.OnthoigianGiuChanging(value);
					this.SendPropertyChanging();
					this._thoigianGiu = value;
					this.SendPropertyChanged("thoigianGiu");
					this.OnthoigianGiuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ghe_chitiethoadon", Storage="_chitiethoadons", ThisKey="id", OtherKey="gheid")]
		public EntitySet<chitiethoadon> chitiethoadons
		{
			get
			{
				return this._chitiethoadons;
			}
			set
			{
				this._chitiethoadons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hoadon_ghe", Storage="_hoadon", ThisKey="hoadonid", OtherKey="id", IsForeignKey=true)]
		public hoadon hoadon
		{
			get
			{
				return this._hoadon.Entity;
			}
			set
			{
				hoadon previousValue = this._hoadon.Entity;
				if (((previousValue != value) 
							|| (this._hoadon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hoadon.Entity = null;
						previousValue.ghes.Remove(this);
					}
					this._hoadon.Entity = value;
					if ((value != null))
					{
						value.ghes.Add(this);
						this._hoadonid = value.id;
					}
					else
					{
						this._hoadonid = default(Nullable<int>);
					}
					this.SendPropertyChanged("hoadon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="phim_ghe", Storage="_phim", ThisKey="phimid", OtherKey="id", IsForeignKey=true)]
		public phim phim
		{
			get
			{
				return this._phim.Entity;
			}
			set
			{
				phim previousValue = this._phim.Entity;
				if (((previousValue != value) 
							|| (this._phim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._phim.Entity = null;
						previousValue.ghes.Remove(this);
					}
					this._phim.Entity = value;
					if ((value != null))
					{
						value.ghes.Add(this);
						this._phimid = value.id;
					}
					else
					{
						this._phimid = default(int);
					}
					this.SendPropertyChanged("phim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_chitiethoadons(chitiethoadon entity)
		{
			this.SendPropertyChanging();
			entity.ghe = this;
		}
		
		private void detach_chitiethoadons(chitiethoadon entity)
		{
			this.SendPropertyChanging();
			entity.ghe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.hoadon")]
	public partial class hoadon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _userid;
		
		private System.DateTime _ngaytao;
		
		private System.Nullable<int> _trangthai;
		
		private EntitySet<chitietdoan> _chitietdoans;
		
		private EntitySet<chitiethoadon> _chitiethoadons;
		
		private EntitySet<ghe> _ghes;
		
		private EntityRef<nguoidung> _nguoidung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnuseridChanging(int value);
    partial void OnuseridChanged();
    partial void OnngaytaoChanging(System.DateTime value);
    partial void OnngaytaoChanged();
    partial void OntrangthaiChanging(System.Nullable<int> value);
    partial void OntrangthaiChanged();
    #endregion
		
		public hoadon()
		{
			this._chitietdoans = new EntitySet<chitietdoan>(new Action<chitietdoan>(this.attach_chitietdoans), new Action<chitietdoan>(this.detach_chitietdoans));
			this._chitiethoadons = new EntitySet<chitiethoadon>(new Action<chitiethoadon>(this.attach_chitiethoadons), new Action<chitiethoadon>(this.detach_chitiethoadons));
			this._ghes = new EntitySet<ghe>(new Action<ghe>(this.attach_ghes), new Action<ghe>(this.detach_ghes));
			this._nguoidung = default(EntityRef<nguoidung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="Int NOT NULL")]
		public int userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					if (this._nguoidung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaytao", DbType="DateTime NOT NULL")]
		public System.DateTime ngaytao
		{
			get
			{
				return this._ngaytao;
			}
			set
			{
				if ((this._ngaytao != value))
				{
					this.OnngaytaoChanging(value);
					this.SendPropertyChanging();
					this._ngaytao = value;
					this.SendPropertyChanged("ngaytao");
					this.OnngaytaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangthai", DbType="Int")]
		public System.Nullable<int> trangthai
		{
			get
			{
				return this._trangthai;
			}
			set
			{
				if ((this._trangthai != value))
				{
					this.OntrangthaiChanging(value);
					this.SendPropertyChanging();
					this._trangthai = value;
					this.SendPropertyChanged("trangthai");
					this.OntrangthaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hoadon_chitietdoan", Storage="_chitietdoans", ThisKey="id", OtherKey="hoadonid")]
		public EntitySet<chitietdoan> chitietdoans
		{
			get
			{
				return this._chitietdoans;
			}
			set
			{
				this._chitietdoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hoadon_chitiethoadon", Storage="_chitiethoadons", ThisKey="id", OtherKey="hoadonid")]
		public EntitySet<chitiethoadon> chitiethoadons
		{
			get
			{
				return this._chitiethoadons;
			}
			set
			{
				this._chitiethoadons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hoadon_ghe", Storage="_ghes", ThisKey="id", OtherKey="hoadonid")]
		public EntitySet<ghe> ghes
		{
			get
			{
				return this._ghes;
			}
			set
			{
				this._ghes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nguoidung_hoadon", Storage="_nguoidung", ThisKey="userid", OtherKey="id", IsForeignKey=true)]
		public nguoidung nguoidung
		{
			get
			{
				return this._nguoidung.Entity;
			}
			set
			{
				nguoidung previousValue = this._nguoidung.Entity;
				if (((previousValue != value) 
							|| (this._nguoidung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nguoidung.Entity = null;
						previousValue.hoadons.Remove(this);
					}
					this._nguoidung.Entity = value;
					if ((value != null))
					{
						value.hoadons.Add(this);
						this._userid = value.id;
					}
					else
					{
						this._userid = default(int);
					}
					this.SendPropertyChanged("nguoidung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_chitietdoans(chitietdoan entity)
		{
			this.SendPropertyChanging();
			entity.hoadon = this;
		}
		
		private void detach_chitietdoans(chitietdoan entity)
		{
			this.SendPropertyChanging();
			entity.hoadon = null;
		}
		
		private void attach_chitiethoadons(chitiethoadon entity)
		{
			this.SendPropertyChanging();
			entity.hoadon = this;
		}
		
		private void detach_chitiethoadons(chitiethoadon entity)
		{
			this.SendPropertyChanging();
			entity.hoadon = null;
		}
		
		private void attach_ghes(ghe entity)
		{
			this.SendPropertyChanging();
			entity.hoadon = this;
		}
		
		private void detach_ghes(ghe entity)
		{
			this.SendPropertyChanging();
			entity.hoadon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nguoidung")]
	public partial class nguoidung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _password;
		
		private string _email;
		
		private string _sodienthoai;
		
		private EntitySet<hoadon> _hoadons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnsodienthoaiChanging(string value);
    partial void OnsodienthoaiChanged();
    #endregion
		
		public nguoidung()
		{
			this._hoadons = new EntitySet<hoadon>(new Action<hoadon>(this.attach_hoadons), new Action<hoadon>(this.detach_hoadons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sodienthoai", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string sodienthoai
		{
			get
			{
				return this._sodienthoai;
			}
			set
			{
				if ((this._sodienthoai != value))
				{
					this.OnsodienthoaiChanging(value);
					this.SendPropertyChanging();
					this._sodienthoai = value;
					this.SendPropertyChanged("sodienthoai");
					this.OnsodienthoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nguoidung_hoadon", Storage="_hoadons", ThisKey="id", OtherKey="userid")]
		public EntitySet<hoadon> hoadons
		{
			get
			{
				return this._hoadons;
			}
			set
			{
				this._hoadons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_hoadons(hoadon entity)
		{
			this.SendPropertyChanging();
			entity.nguoidung = this;
		}
		
		private void detach_hoadons(hoadon entity)
		{
			this.SendPropertyChanging();
			entity.nguoidung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.phim")]
	public partial class phim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tenphim;
		
		private int _theloaiid;
		
		private System.DateTime _thoigian;
		
		private decimal _giave;
		
		private string _mota;
		
		private string _hinhanh;
		
		private EntitySet<ghe> _ghes;
		
		private EntityRef<theloai> _theloai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenphimChanging(string value);
    partial void OntenphimChanged();
    partial void OntheloaiidChanging(int value);
    partial void OntheloaiidChanged();
    partial void OnthoigianChanging(System.DateTime value);
    partial void OnthoigianChanged();
    partial void OngiaveChanging(decimal value);
    partial void OngiaveChanged();
    partial void OnmotaChanging(string value);
    partial void OnmotaChanged();
    partial void OnhinhanhChanging(string value);
    partial void OnhinhanhChanged();
    #endregion
		
		public phim()
		{
			this._ghes = new EntitySet<ghe>(new Action<ghe>(this.attach_ghes), new Action<ghe>(this.detach_ghes));
			this._theloai = default(EntityRef<theloai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenphim", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string tenphim
		{
			get
			{
				return this._tenphim;
			}
			set
			{
				if ((this._tenphim != value))
				{
					this.OntenphimChanging(value);
					this.SendPropertyChanging();
					this._tenphim = value;
					this.SendPropertyChanged("tenphim");
					this.OntenphimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_theloaiid", DbType="Int NOT NULL")]
		public int theloaiid
		{
			get
			{
				return this._theloaiid;
			}
			set
			{
				if ((this._theloaiid != value))
				{
					if (this._theloai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntheloaiidChanging(value);
					this.SendPropertyChanging();
					this._theloaiid = value;
					this.SendPropertyChanged("theloaiid");
					this.OntheloaiidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thoigian", DbType="DateTime NOT NULL")]
		public System.DateTime thoigian
		{
			get
			{
				return this._thoigian;
			}
			set
			{
				if ((this._thoigian != value))
				{
					this.OnthoigianChanging(value);
					this.SendPropertyChanging();
					this._thoigian = value;
					this.SendPropertyChanged("thoigian");
					this.OnthoigianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_giave", DbType="Decimal(10,2) NOT NULL")]
		public decimal giave
		{
			get
			{
				return this._giave;
			}
			set
			{
				if ((this._giave != value))
				{
					this.OngiaveChanging(value);
					this.SendPropertyChanging();
					this._giave = value;
					this.SendPropertyChanged("giave");
					this.OngiaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mota", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string mota
		{
			get
			{
				return this._mota;
			}
			set
			{
				if ((this._mota != value))
				{
					this.OnmotaChanging(value);
					this.SendPropertyChanging();
					this._mota = value;
					this.SendPropertyChanged("mota");
					this.OnmotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hinhanh", DbType="NVarChar(555)")]
		public string hinhanh
		{
			get
			{
				return this._hinhanh;
			}
			set
			{
				if ((this._hinhanh != value))
				{
					this.OnhinhanhChanging(value);
					this.SendPropertyChanging();
					this._hinhanh = value;
					this.SendPropertyChanged("hinhanh");
					this.OnhinhanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="phim_ghe", Storage="_ghes", ThisKey="id", OtherKey="phimid")]
		public EntitySet<ghe> ghes
		{
			get
			{
				return this._ghes;
			}
			set
			{
				this._ghes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="theloai_phim", Storage="_theloai", ThisKey="theloaiid", OtherKey="id", IsForeignKey=true)]
		public theloai theloai
		{
			get
			{
				return this._theloai.Entity;
			}
			set
			{
				theloai previousValue = this._theloai.Entity;
				if (((previousValue != value) 
							|| (this._theloai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._theloai.Entity = null;
						previousValue.phims.Remove(this);
					}
					this._theloai.Entity = value;
					if ((value != null))
					{
						value.phims.Add(this);
						this._theloaiid = value.id;
					}
					else
					{
						this._theloaiid = default(int);
					}
					this.SendPropertyChanged("theloai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ghes(ghe entity)
		{
			this.SendPropertyChanging();
			entity.phim = this;
		}
		
		private void detach_ghes(ghe entity)
		{
			this.SendPropertyChanging();
			entity.phim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.theloai")]
	public partial class theloai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ten;
		
		private EntitySet<phim> _phims;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenChanging(string value);
    partial void OntenChanged();
    #endregion
		
		public theloai()
		{
			this._phims = new EntitySet<phim>(new Action<phim>(this.attach_phims), new Action<phim>(this.detach_phims));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ten", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ten
		{
			get
			{
				return this._ten;
			}
			set
			{
				if ((this._ten != value))
				{
					this.OntenChanging(value);
					this.SendPropertyChanging();
					this._ten = value;
					this.SendPropertyChanged("ten");
					this.OntenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="theloai_phim", Storage="_phims", ThisKey="id", OtherKey="theloaiid")]
		public EntitySet<phim> phims
		{
			get
			{
				return this._phims;
			}
			set
			{
				this._phims.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_phims(phim entity)
		{
			this.SendPropertyChanging();
			entity.theloai = this;
		}
		
		private void detach_phims(phim entity)
		{
			this.SendPropertyChanging();
			entity.theloai = null;
		}
	}
}
#pragma warning restore 1591
